server.port=8080

#security.enable-csrf=false

spring.datasource.url=jdbc:postgresql://localhost/socialhelper
spring.datasource.username=socialhelper
spring.datasource.password=SocialHelper2019
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

logging.level.sql=debug

logging.level.web=debug
logging.level.org.springframework.web=debug
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG

spring.http.log-request-details=true

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#json.file=classpath:static/json/test.json
json.file1=classpath:static/json/social-service1.json
json.file=classpath:static/json/social-services.json

###SSO###
security.oauth2.client.client-id=770984289336-bqh7r0v6cr5lfhqfprahk78jq87vnvms.apps.googleusercontent.com
security.oauth2.client.client-secret=SIbkQ6E0S_3b1FZYQ-wTABhh

# FROM SARAFAN letsCode
security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.client.scope=openid,email,profile
security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
security.oauth2.resource.preferTokenInfo=true

# From my quiz-project
#google.client.id=770984289336-bqh7r0v6cr5lfhqfprahk78jq87vnvms.apps.googleusercontent.com
#google.client.secret=SIbkQ6E0S_3b1FZYQ-wTABh
#google.auth.scope=https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/userinfo.profile
#google.accessTokenUri=https://accounts.google.com/o/oauth2/token
#google.userAuthorizationUri=https://accounts.google.com/o/oauth2/auth
#google.authorization.code=authorization_code
#google.preestablished.redirect.url=http://localhost:9000/googleLogin

activedirectory.domain=pcson.ru
activedirectory.url=ldap://srv-dc.pcson.ru

#HTTPS
# https://www.javadevjournal.com/spring-boot/how-to-enable-http-https-in-spring-boot/

# The format used for the keystore. for JKS, set it as JKS
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/javadevjournal.p12

# The password used to generate the certificate
#server.ssl.key-store-password=12345678
# The alias mapped to the certificate
#server.ssl.key-alias=javadevjournal
# Run Spring Boot on HTTPS only
